# Generated by Django 5.2.4 on 2025-10-03 15:22

import uuid

import apps.billing.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


def _generate_unique_order_references(apps, schema_editor):
    Order = apps.get_model('billing', 'Order')
    db_alias = schema_editor.connection.alias

    seen = set()
    for order in Order.objects.using(db_alias).order_by('id').iterator():
        reference = (order.reference or '').strip()
        if not reference or reference in seen:
            reference = uuid.uuid4().hex[:24]
            while reference in seen:
                reference = uuid.uuid4().hex[:24]
            order.reference = reference
            order.save(update_fields=['reference'])
        seen.add(reference)


class Migration(migrations.Migration):

    dependencies = [
        ('billing', '0002_order_discount_pct_effective_order_list_price_cents_and_more'),
        ('catalog', '0004_coursesidebarsettings_coursetrainingcontent_and_more'),
        ('marketing', '0005_bonusfeature'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('stripe_customer_id', models.CharField(blank=True, default='', max_length=180)),
                ('guest_id', models.CharField(blank=True, default='', max_length=64)),
                ('merged_from_guest_id', models.CharField(blank=True, default='', max_length=64)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceArtifact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('invoice', 'Invoice'), ('receipt', 'Receipt')], max_length=20)),
                ('storage_path', models.CharField(max_length=255)),
                ('checksum', models.CharField(max_length=128)),
                ('rendered_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_sku', models.CharField(max_length=120)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_amount', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.CharField(blank=True, default='', max_length=255)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intent_id', models.CharField(max_length=200)),
                ('idempotency_key', models.CharField(max_length=200, unique=True)),
                ('status', models.CharField(default='created', max_length=64)),
                ('raw_payload', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refund_id', models.CharField(max_length=200, unique=True)),
                ('amount', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('REQUESTED', 'Requested'), ('SUCCEEDED', 'Succeeded'), ('FAILED', 'Failed')], max_length=32)),
                ('raw_payload', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='WebhookEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.CharField(max_length=200, unique=True)),
                ('event_type', models.CharField(max_length=120)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processed', 'Processed'), ('skipped', 'Skipped'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('correlation_id', models.CharField(blank=True, default='', max_length=64)),
                ('raw_payload', models.JSONField(blank=True, default=dict)),
                ('stripe_signature', models.CharField(blank=True, default='', max_length=255)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_error', models.TextField(blank=True, default='')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='order',
            options={'ordering': ['-created_at']},
        ),
        migrations.AddField(
            model_name='order',
            name='metadata',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='order',
            name='reference',
            field=models.CharField(default=apps.billing.models._default_reference, max_length=32),
        ),
        migrations.RunPython(_generate_unique_order_references, migrations.RunPython.noop),
        migrations.AlterField(
            model_name='order',
            name='reference',
            field=models.CharField(default=apps.billing.models._default_reference, max_length=32, unique=True),
        ),
        migrations.AddField(
            model_name='order',
            name='stripe_checkout_session_id',
            field=models.CharField(blank=True, default='', max_length=200),
        ),
        migrations.AddField(
            model_name='order',
            name='version',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='payment',
            name='idempotency_key',
            field=models.CharField(blank=True, default='', max_length=200),
        ),
        migrations.AddField(
            model_name='payment',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='order',
            name='idempotency_key',
            field=models.CharField(default=apps.billing.models._default_idempotency_key, max_length=200, unique=True),
        ),
        migrations.AlterField(
            model_name='order',
            name='status',
            field=models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING_PAYMENT', 'Pending payment'), ('REQUIRES_ACTION', 'Requires action'), ('PAID', 'Paid'), ('REFUNDED', 'Refunded'), ('CANCELED', 'Canceled')], default='DRAFT', max_length=32),
        ),
        migrations.AlterField(
            model_name='order',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['stripe_payment_intent_id'], name='billing_pay_stripe__5c9ebe_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentlog',
            index=models.Index(fields=['order', 'event_type'], name='billing_pay_order_i_5e0988_idx'),
        ),
        migrations.AddField(
            model_name='customerprofile',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_profiles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='order',
            name='customer_profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='billing.customerprofile'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['stripe_checkout_session_id'], name='billing_ord_stripe__b307a4_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['customer_profile'], name='billing_ord_custome_625094_idx'),
        ),
        migrations.AddField(
            model_name='invoiceartifact',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artifacts', to='billing.order'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='billing.order'),
        ),
        migrations.AddField(
            model_name='paymentattempt',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_attempts', to='billing.order'),
        ),
        migrations.AddField(
            model_name='refund',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='billing.order'),
        ),
        migrations.AddField(
            model_name='webhookevent',
            name='order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webhook_events', to='billing.order'),
        ),
        migrations.AddIndex(
            model_name='customerprofile',
            index=models.Index(fields=['email'], name='billing_cus_email_97500c_idx'),
        ),
        migrations.AddIndex(
            model_name='customerprofile',
            index=models.Index(fields=['guest_id'], name='billing_cus_guest_i_02e897_idx'),
        ),
        migrations.AddIndex(
            model_name='customerprofile',
            index=models.Index(fields=['created_at'], name='billing_cus_created_6b1ada_idx'),
        ),
        migrations.AddConstraint(
            model_name='customerprofile',
            constraint=models.UniqueConstraint(condition=models.Q(('user__isnull', False)), fields=('user',), name='billing_customer_unique_user'),
        ),
        migrations.AddConstraint(
            model_name='customerprofile',
            constraint=models.UniqueConstraint(condition=models.Q(('stripe_customer_id__gt', '')), fields=('stripe_customer_id',), name='billing_customer_unique_stripe_id'),
        ),
        migrations.AddIndex(
            model_name='invoiceartifact',
            index=models.Index(fields=['order', 'kind'], name='billing_inv_order_i_0bd470_idx'),
        ),
        migrations.AddConstraint(
            model_name='invoiceartifact',
            constraint=models.UniqueConstraint(fields=('order', 'kind'), name='billing_unique_artifact_per_kind'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['order', 'product_sku'], name='billing_ord_order_i_25a6f3_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentattempt',
            index=models.Index(fields=['intent_id'], name='billing_pay_intent__2255e4_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentattempt',
            index=models.Index(fields=['status'], name='billing_pay_status_f3e8ba_idx'),
        ),
        migrations.AddConstraint(
            model_name='paymentattempt',
            constraint=models.UniqueConstraint(fields=('order', 'intent_id'), name='billing_unique_intent_per_order'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['refund_id'], name='billing_ref_refund__3a0954_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['status'], name='billing_ref_status_3068db_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['created_at'], name='billing_ref_created_80ceaa_idx'),
        ),
        migrations.AddIndex(
            model_name='webhookevent',
            index=models.Index(fields=['event_type'], name='billing_web_event_t_2f4669_idx'),
        ),
        migrations.AddIndex(
            model_name='webhookevent',
            index=models.Index(fields=['status'], name='billing_web_status_60192c_idx'),
        ),
        migrations.AddIndex(
            model_name='webhookevent',
            index=models.Index(fields=['created_at'], name='billing_web_created_f49761_idx'),
        ),
    ]
