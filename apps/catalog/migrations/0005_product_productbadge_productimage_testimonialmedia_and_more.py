# Generated by Django 5.2.4 on 2025-10-06 14:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0004_coursesidebarsettings_coursetrainingcontent_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=220, unique=True)),
                ('name', models.CharField(max_length=180)),
                ('description', models.TextField(blank=True)),
                ('highlights', models.JSONField(blank=True, default=list)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('promo_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(default='MAD', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('seo_title', models.CharField(blank=True, max_length=160)),
                ('seo_description', models.CharField(blank=True, max_length=320)),
                ('extra', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=120)),
                ('icon', models.CharField(blank=True, max_length=120)),
                ('extra', models.JSONField(blank=True, default=dict)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badges', to='catalog.product')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('hero', 'Hero'), ('gallery', 'Gallery'), ('lifestyle', 'Lifestyle')], default='gallery', max_length=16)),
                ('src', models.URLField(max_length=500)),
                ('alt', models.CharField(blank=True, max_length=255)),
                ('thumb', models.URLField(blank=True, max_length=500)),
                ('position', models.PositiveIntegerField(default=0)),
                ('width', models.PositiveIntegerField(blank=True, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='catalog.product')),
            ],
            options={
                'ordering': ['position', 'id'],
            },
        ),
        migrations.CreateModel(
            name='TestimonialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(blank=True, max_length=160)),
                ('quote', models.TextField(blank=True)),
                ('image_url', models.URLField(blank=True, max_length=500)),
                ('video_url', models.URLField(blank=True, max_length=500)),
                ('position', models.PositiveIntegerField(default=0)),
                ('extra', models.JSONField(blank=True, default=dict)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testimonial_media', to='catalog.product')),
            ],
            options={
                'ordering': ['position', 'id'],
            },
        ),
        migrations.CreateModel(
            name='ProductOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField()),
                ('title', models.CharField(max_length=160)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('compare_at_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('savings_label', models.CharField(blank=True, max_length=120)),
                ('extra', models.JSONField(blank=True, default=dict)),
                ('position', models.PositiveIntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='catalog.product')),
            ],
            options={
                'ordering': ['position', 'id'],
                'unique_together': {('product', 'code')},
            },
        ),
        migrations.CreateModel(
            name='ProductOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.SlugField()),
                ('label', models.CharField(max_length=120)),
                ('enabled', models.BooleanField(default=True)),
                ('items', models.JSONField(blank=True, default=list)),
                ('extra', models.JSONField(blank=True, default=dict)),
                ('position', models.PositiveIntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='catalog.product')),
            ],
            options={
                'ordering': ['position', 'id'],
                'unique_together': {('product', 'key')},
            },
        ),
    ]
