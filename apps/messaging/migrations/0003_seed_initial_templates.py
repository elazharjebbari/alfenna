# Generated by Django 5.2.4 on 2025-10-01 20:53

from pathlib import Path

from django.conf import settings
from django.db import migrations


def _normalise(content: str) -> str:
    return content.strip().replace("\r\n", "\n")


def seed_initial_templates(apps, schema_editor) -> None:
    EmailTemplate = apps.get_model("messaging", "EmailTemplate")
    root = Path(settings.BASE_DIR) / "templates" / "email"
    locale = "fr"

    if not root.exists():
        return

    for category_dir in sorted(root.iterdir()):
        if not category_dir.is_dir():
            continue
        locale_dir = category_dir / locale
        if not locale_dir.exists():
            continue
        for subject_file in sorted(locale_dir.glob("*.subject.txt")):
            stem = subject_file.stem.replace(".subject", "")
            html_file = locale_dir / f"{stem}.html"
            text_file = locale_dir / f"{stem}.txt"
            if not html_file.exists() or not text_file.exists():
                continue

            subject_content = subject_file.read_text(encoding="utf-8").strip()
            html_content = html_file.read_text(encoding="utf-8")
            text_content = text_file.read_text(encoding="utf-8")

            slug = f"{category_dir.name}/{stem}"
            latest = (
                EmailTemplate.objects.filter(slug=slug, locale=locale)
                .order_by("-version")
                .first()
            )

            if latest and (
                _normalise(latest.subject) == _normalise(subject_content)
                and _normalise(latest.html_template) == _normalise(html_content)
                and _normalise(latest.text_template) == _normalise(text_content)
            ):
                continue

            version = 1 if latest is None else latest.version + 1
            EmailTemplate.objects.create(
                slug=slug,
                locale=locale,
                version=version,
                subject=subject_content,
                html_template=html_content,
                text_template=text_content,
                metadata={
                    "sources": {
                        "subject": str(subject_file),
                        "html": str(html_file),
                        "text": str(text_file),
                    }
                },
            )


def noop(apps, schema_editor) -> None:  # pragma: no cover - migration rollback placeholder
    del apps, schema_editor


class Migration(migrations.Migration):

    dependencies = [
        ('messaging', '0002_outboxemail_rendered_html_and_more'),
    ]

    operations = [
        migrations.RunPython(seed_initial_templates, noop),
    ]
