# Generated by Django 5.2.4 on 2025-10-15 09:02

from django.db import migrations, models


def _rename_index_forwards(apps, schema_editor):
    model = apps.get_model('i18n', 'StringTranslation')
    table = model._meta.db_table
    connection = schema_editor.connection
    introspection = connection.introspection

    old_index = models.Index(
        fields=['model_label', 'object_id', 'field', 'language'],
        name='i18n_string_mo_ba0509_idx',
    )
    new_index = models.Index(
        fields=['model_label', 'object_id', 'field', 'language'],
        name='i18n_string_model_l_1a96d1_idx',
    )

    with connection.cursor() as cursor:
        constraints = introspection.get_constraints(cursor, table)
    if old_index.name in constraints:
        schema_editor.remove_index(model, old_index)
    with connection.cursor() as cursor:
        constraints = introspection.get_constraints(cursor, table)
    if new_index.name not in constraints:
        schema_editor.add_index(model, new_index)


def _rename_index_backwards(apps, schema_editor):
    model = apps.get_model('i18n', 'StringTranslation')
    table = model._meta.db_table
    connection = schema_editor.connection
    introspection = connection.introspection

    old_index = models.Index(
        fields=['model_label', 'object_id', 'field', 'language'],
        name='i18n_string_mo_ba0509_idx',
    )
    new_index = models.Index(
        fields=['model_label', 'object_id', 'field', 'language'],
        name='i18n_string_model_l_1a96d1_idx',
    )

    with connection.cursor() as cursor:
        constraints = introspection.get_constraints(cursor, table)
    if new_index.name in constraints:
        schema_editor.remove_index(model, new_index)
    with connection.cursor() as cursor:
        constraints = introspection.get_constraints(cursor, table)
    if old_index.name not in constraints:
        schema_editor.add_index(model, old_index)


class Migration(migrations.Migration):

    dependencies = [
        ('i18n', '0001_initial'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.RenameIndex(
                    model_name='stringtranslation',
                    new_name='i18n_string_model_l_1a96d1_idx',
                    old_name='i18n_string_mo_ba0509_idx',
                ),
            ],
            database_operations=[
                migrations.RunPython(_rename_index_forwards, _rename_index_backwards),
            ],
        ),
    ]
